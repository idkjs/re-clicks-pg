// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var App = require("./App.bs.js");
var React = require("react");
var ReactDOMRe = require("reason-react/src/ReactDOMRe.js");
var ApolloLinks = require("reason-apollo/src/ApolloLinks.bs.js");
var ReasonApollo = require("reason-apollo/src/ReasonApollo.bs.js");
var ServiceWorker = require("./serviceWorker");
var ReactHooks = require("@apollo/react-hooks");
var ApolloInMemoryCache = require("reason-apollo/src/ApolloInMemoryCache.bs.js");

function register_service_worker(prim) {
  ServiceWorker.register();
  return /* () */0;
}

function unregister_service_worker(prim) {
  ServiceWorker.unregister();
  return /* () */0;
}

var inMemoryCache = ApolloInMemoryCache.createInMemoryCache(undefined, undefined, /* () */0);

var httpLink = ApolloLinks.createHttpLink("http://localhost:3000/graphql", undefined, undefined, undefined, undefined, undefined, /* () */0);

var client = ReasonApollo.createApolloClient(httpLink, inMemoryCache, undefined, undefined, undefined, undefined, /* () */0);

var app = React.createElement(ReactHooks.ApolloProvider, {
      client: client,
      children: React.createElement(App.make, { })
    });

ReactDOMRe.hydrateToElementWithId(app, "root");

ServiceWorker.unregister();

exports.register_service_worker = register_service_worker;
exports.unregister_service_worker = unregister_service_worker;
exports.inMemoryCache = inMemoryCache;
exports.httpLink = httpLink;
exports.client = client;
exports.app = app;
/* inMemoryCache Not a pure module */
